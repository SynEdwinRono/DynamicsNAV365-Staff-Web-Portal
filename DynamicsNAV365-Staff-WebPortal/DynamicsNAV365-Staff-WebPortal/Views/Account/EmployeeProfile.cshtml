@model DynamicsNAV365_Staff_WebPortal.Models.Account.EmployeeProfileModel
@{
	ViewBag.Title = "Employee Profile";
}
<div class="wrapper row-offcanvas row-offcanvas-left">
	<!--Render Employee Profile Sidebar-->
	@{Html.RenderAction("_EmployeeProfileSideBar", "Account");}
	<aside class="right-side">
		<section class="content">
			<div class="row">
				<div class="col-lg-12 col-md-12">
					<div class="card">
						<div class="card-header text-center" data-background-color="company_card">
						</div>
						<div class="card-content">
							@using (Html.BeginForm("EmployeeProfile", "Account", FormMethod.Post, new { @class = "" }))
							{
								@Html.AntiForgeryToken()
								if (Model != null && Model.ErrorStatus == true)
								{
									<div class="alert alert-danger">
										<strong>Error! </strong>@Html.Raw(HttpUtility.HtmlDecode(Model.ErrorMessage))
									</div>
								}
								<fieldset>
									<legend>Personal Information</legend>
									<div class="row">
										<div class="col-md-3">
											<div id="PassportPreview">
												@if (Model != null && Model.PassportAttached == true)
												{
													<img id="Passport" src="~/StaffData/@Model.EmployeePassportPath" class="img-responsive" style="width:200px;height:200px;border-radius:10px" />
												}
												else
												{
													<img id="Passport" src="~/Content/images/photo_placeholder.png" class="img-responsive" style="width:200px;height:200px;border-radius:10px" />
												}
												<div class="caption"></div>
											</div>
										</div>
										<div class="col-md-9">
											<div class="row">
												<div class="col-md-5">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.No, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.No, "", new { @class = "text-danger" })
													</div>
												</div>
												<div class="col-md-7">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-5">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
													</div>
												</div>
												<div class="col-md-7">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-5">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.MartialStatus, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.MartialStatus, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.MartialStatus, "", new { @class = "text-danger" })
													</div>
												</div>
												<div class="col-md-7">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.Citizenship, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.Citizenship, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.Citizenship, "", new { @class = "text-danger" })
													</div>
												</div>
											</div>
											<div class="row">
												<div class="col-md-5">
													<div class="form-group label-floating">
														@Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
														@Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
														@Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
													</div>
												</div>
											</div>
										</div>
									</div>
								</fieldset><hr />
								<fieldset>
									<legend>Contact Information</legend>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.MobilePhoneNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.MobilePhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.MobilePhoneNumber, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.WorkEmailAddress, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.WorkEmailAddress, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.WorkEmailAddress, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.CountyName, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.CountyName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.CountyName, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.SubcountyName, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.SubcountyName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.SubcountyName, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
								</fieldset><hr />
								<fieldset>
									<legend>Employment Information</legend>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.JobGrade, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.JobGrade, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.JobGrade, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.NationalIDNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.NationalIDNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.NationalIDNumber, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.PINNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.PINNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.PINNumber, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.NSSFNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.NSSFNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.NSSFNumber, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.NHIFNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.NHIFNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.NHIFNumber, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.ProfessionalNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.ProfessionalNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.ProfessionalNumber, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.ProfessionalLicenceExpiryDate, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.ProfessionalLicenceExpiryDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.ProfessionalLicenceExpiryDate, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.EmployementDate, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.EmployementDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.EmployementDate, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
								</fieldset><hr />
								<fieldset>
									<legend>Bank Information</legend>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
											</div>
										</div>
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.BankBranchName, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.BankBranchName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.BankBranchName, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
									<div class="row">
										<div class="col-md-6">
											<div class="form-group label-floating">
												@Html.LabelFor(model => model.BankAccountNumber, htmlAttributes: new { @class = "control-label" })
												@Html.EditorFor(model => model.BankAccountNumber, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
												@Html.ValidationMessageFor(model => model.BankAccountNumber, "", new { @class = "text-danger" })
											</div>
										</div>
									</div>
								</fieldset>
							}

						</div>
						<div class="card-footer">

						</div>
					</div>
				</div>
			</div>
		</section>
	</aside>
</div>
@section scripts{
	<script type="text/javascript">
        $(document).ready(function () {
            //Add CSS Classes
            $("#EmployeeProfileMenuItem").addClass("active");
        });
	</script>
}