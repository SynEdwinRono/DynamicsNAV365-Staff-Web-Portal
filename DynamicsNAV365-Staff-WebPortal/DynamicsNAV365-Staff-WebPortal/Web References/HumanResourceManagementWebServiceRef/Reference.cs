//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DynamicsNAV365_Staff_WebPortal.HumanResourceManagementWebServiceRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HumanResourceManagementWS_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS")]
    public partial class HumanResourceManagementWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckOpenLeavePlannerExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpenLeaveApplicationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLeaveApplicationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRunningLeavesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveEndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveReturnDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeaveApplicationApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelLeaveApplicationApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReopenLeaveApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeLeaveBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpenLeaveReimbursementExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyHRRequiredDocumentLocalURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePortalDocumentLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HumanResourceManagementWS() {
            this.Url = global::DynamicsNAV365_Staff_WebPortal.Properties.Settings.Default.DynamicsNAV365_Staff_WebPortal_HumanResourceManagementWebServiceRef_HumanResourceManagementWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckOpenLeavePlannerExistsCompletedEventHandler CheckOpenLeavePlannerExistsCompleted;
        
        /// <remarks/>
        public event CheckOpenLeaveApplicationExistsCompletedEventHandler CheckOpenLeaveApplicationExistsCompleted;
        
        /// <remarks/>
        public event CheckLeaveApplicationExistsCompletedEventHandler CheckLeaveApplicationExistsCompleted;
        
        /// <remarks/>
        public event CreateLeaveApplicationCompletedEventHandler CreateLeaveApplicationCompleted;
        
        /// <remarks/>
        public event ModifyLeaveApplicationCompletedEventHandler ModifyLeaveApplicationCompleted;
        
        /// <remarks/>
        public event CheckRunningLeavesCompletedEventHandler CheckRunningLeavesCompleted;
        
        /// <remarks/>
        public event GetLeaveEndDateCompletedEventHandler GetLeaveEndDateCompleted;
        
        /// <remarks/>
        public event GetLeaveReturnDateCompletedEventHandler GetLeaveReturnDateCompleted;
        
        /// <remarks/>
        public event GetOpenLeaveApplicationCompletedEventHandler GetOpenLeaveApplicationCompleted;
        
        /// <remarks/>
        public event GetLeaveApplicationStatusCompletedEventHandler GetLeaveApplicationStatusCompleted;
        
        /// <remarks/>
        public event CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventHandler CheckLeaveApplicationApprovalWorkflowEnabledCompleted;
        
        /// <remarks/>
        public event SendLeaveApplicationApprovalRequestCompletedEventHandler SendLeaveApplicationApprovalRequestCompleted;
        
        /// <remarks/>
        public event CancelLeaveApplicationApprovalRequestCompletedEventHandler CancelLeaveApplicationApprovalRequestCompleted;
        
        /// <remarks/>
        public event ReopenLeaveApplicationCompletedEventHandler ReopenLeaveApplicationCompleted;
        
        /// <remarks/>
        public event GetEmployeeLeaveBalanceCompletedEventHandler GetEmployeeLeaveBalanceCompleted;
        
        /// <remarks/>
        public event CheckOpenLeaveReimbursementExistsCompletedEventHandler CheckOpenLeaveReimbursementExistsCompleted;
        
        /// <remarks/>
        public event ModifyHRRequiredDocumentLocalURLCompletedEventHandler ModifyHRRequiredDocumentLocalURLCompleted;
        
        /// <remarks/>
        public event CreatePortalDocumentLinkCompletedEventHandler CreatePortalDocumentLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckOpenLeaveP" +
            "lannerExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckOpenLeavePlannerExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckOpenLeavePlannerExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenLeavePlannerExists", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenLeavePlannerExistsAsync(string employeeNoa46) {
            this.CheckOpenLeavePlannerExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenLeavePlannerExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenLeavePlannerExistsOperationCompleted == null)) {
                this.CheckOpenLeavePlannerExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenLeavePlannerExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenLeavePlannerExists", new object[] {
                        employeeNoa46}, this.CheckOpenLeavePlannerExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenLeavePlannerExistsOperationCompleted(object arg) {
            if ((this.CheckOpenLeavePlannerExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenLeavePlannerExistsCompleted(this, new CheckOpenLeavePlannerExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckOpenLeaveA" +
            "pplicationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckOpenLeaveApplicationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckOpenLeaveApplicationExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenLeaveApplicationExists", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenLeaveApplicationExistsAsync(string employeeNoa46) {
            this.CheckOpenLeaveApplicationExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenLeaveApplicationExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenLeaveApplicationExistsOperationCompleted == null)) {
                this.CheckOpenLeaveApplicationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenLeaveApplicationExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenLeaveApplicationExists", new object[] {
                        employeeNoa46}, this.CheckOpenLeaveApplicationExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenLeaveApplicationExistsOperationCompleted(object arg) {
            if ((this.CheckOpenLeaveApplicationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenLeaveApplicationExistsCompleted(this, new CheckOpenLeaveApplicationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckLeaveAppli" +
            "cationExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckLeaveApplicationExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckLeaveApplicationExists(string leaveApplicationNoa46, string employeeNoa46) {
            object[] results = this.Invoke("CheckLeaveApplicationExists", new object[] {
                        leaveApplicationNoa46,
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLeaveApplicationExistsAsync(string leaveApplicationNoa46, string employeeNoa46) {
            this.CheckLeaveApplicationExistsAsync(leaveApplicationNoa46, employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckLeaveApplicationExistsAsync(string leaveApplicationNoa46, string employeeNoa46, object userState) {
            if ((this.CheckLeaveApplicationExistsOperationCompleted == null)) {
                this.CheckLeaveApplicationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLeaveApplicationExistsOperationCompleted);
            }
            this.InvokeAsync("CheckLeaveApplicationExists", new object[] {
                        leaveApplicationNoa46,
                        employeeNoa46}, this.CheckLeaveApplicationExistsOperationCompleted, userState);
        }
        
        private void OnCheckLeaveApplicationExistsOperationCompleted(object arg) {
            if ((this.CheckLeaveApplicationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLeaveApplicationExistsCompleted(this, new CheckLeaveApplicationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CreateLeaveAppl" +
            "ication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CreateLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CreateLeaveApplication(string employeeNoa46) {
            object[] results = this.Invoke("CreateLeaveApplication", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLeaveApplicationAsync(string employeeNoa46) {
            this.CreateLeaveApplicationAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CreateLeaveApplicationAsync(string employeeNoa46, object userState) {
            if ((this.CreateLeaveApplicationOperationCompleted == null)) {
                this.CreateLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("CreateLeaveApplication", new object[] {
                        employeeNoa46}, this.CreateLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnCreateLeaveApplicationOperationCompleted(object arg) {
            if ((this.CreateLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLeaveApplicationCompleted(this, new CreateLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:ModifyLeaveAppl" +
            "ication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="ModifyLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyLeaveApplication(string leaveApplicationNoa46, string leaveType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime leaveStartDate, int daysApplied, string reasonForLeave, string substituteEmployeeNoa46) {
            object[] results = this.Invoke("ModifyLeaveApplication", new object[] {
                        leaveApplicationNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied,
                        reasonForLeave,
                        substituteEmployeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyLeaveApplicationAsync(string leaveApplicationNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied, string reasonForLeave, string substituteEmployeeNoa46) {
            this.ModifyLeaveApplicationAsync(leaveApplicationNoa46, leaveType, leaveStartDate, daysApplied, reasonForLeave, substituteEmployeeNoa46, null);
        }
        
        /// <remarks/>
        public void ModifyLeaveApplicationAsync(string leaveApplicationNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied, string reasonForLeave, string substituteEmployeeNoa46, object userState) {
            if ((this.ModifyLeaveApplicationOperationCompleted == null)) {
                this.ModifyLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("ModifyLeaveApplication", new object[] {
                        leaveApplicationNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied,
                        reasonForLeave,
                        substituteEmployeeNoa46}, this.ModifyLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnModifyLeaveApplicationOperationCompleted(object arg) {
            if ((this.ModifyLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyLeaveApplicationCompleted(this, new ModifyLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckRunningLea" +
            "ves", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckRunningLeaves_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckRunningLeaves(string employeeNoa46, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate) {
            this.Invoke("CheckRunningLeaves", new object[] {
                        employeeNoa46,
                        startDate});
        }
        
        /// <remarks/>
        public void CheckRunningLeavesAsync(string employeeNoa46, System.DateTime startDate) {
            this.CheckRunningLeavesAsync(employeeNoa46, startDate, null);
        }
        
        /// <remarks/>
        public void CheckRunningLeavesAsync(string employeeNoa46, System.DateTime startDate, object userState) {
            if ((this.CheckRunningLeavesOperationCompleted == null)) {
                this.CheckRunningLeavesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRunningLeavesOperationCompleted);
            }
            this.InvokeAsync("CheckRunningLeaves", new object[] {
                        employeeNoa46,
                        startDate}, this.CheckRunningLeavesOperationCompleted, userState);
        }
        
        private void OnCheckRunningLeavesOperationCompleted(object arg) {
            if ((this.CheckRunningLeavesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRunningLeavesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:GetLeaveEndDate" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="GetLeaveEndDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime GetLeaveEndDate(string employeeNoa46, string leaveType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime leaveStartDate, int daysApplied) {
            object[] results = this.Invoke("GetLeaveEndDate", new object[] {
                        employeeNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveEndDateAsync(string employeeNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied) {
            this.GetLeaveEndDateAsync(employeeNoa46, leaveType, leaveStartDate, daysApplied, null);
        }
        
        /// <remarks/>
        public void GetLeaveEndDateAsync(string employeeNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied, object userState) {
            if ((this.GetLeaveEndDateOperationCompleted == null)) {
                this.GetLeaveEndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveEndDateOperationCompleted);
            }
            this.InvokeAsync("GetLeaveEndDate", new object[] {
                        employeeNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied}, this.GetLeaveEndDateOperationCompleted, userState);
        }
        
        private void OnGetLeaveEndDateOperationCompleted(object arg) {
            if ((this.GetLeaveEndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveEndDateCompleted(this, new GetLeaveEndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:GetLeaveReturnD" +
            "ate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="GetLeaveReturnDate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value", DataType="date")]
        public System.DateTime GetLeaveReturnDate(string employeeNoa46, string leaveType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime leaveStartDate, int daysApplied) {
            object[] results = this.Invoke("GetLeaveReturnDate", new object[] {
                        employeeNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveReturnDateAsync(string employeeNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied) {
            this.GetLeaveReturnDateAsync(employeeNoa46, leaveType, leaveStartDate, daysApplied, null);
        }
        
        /// <remarks/>
        public void GetLeaveReturnDateAsync(string employeeNoa46, string leaveType, System.DateTime leaveStartDate, int daysApplied, object userState) {
            if ((this.GetLeaveReturnDateOperationCompleted == null)) {
                this.GetLeaveReturnDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveReturnDateOperationCompleted);
            }
            this.InvokeAsync("GetLeaveReturnDate", new object[] {
                        employeeNoa46,
                        leaveType,
                        leaveStartDate,
                        daysApplied}, this.GetLeaveReturnDateOperationCompleted, userState);
        }
        
        private void OnGetLeaveReturnDateOperationCompleted(object arg) {
            if ((this.GetLeaveReturnDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveReturnDateCompleted(this, new GetLeaveReturnDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:GetOpenLeaveApp" +
            "lication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="GetOpenLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetOpenLeaveApplication(string employeeNoa46) {
            object[] results = this.Invoke("GetOpenLeaveApplication", new object[] {
                        employeeNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenLeaveApplicationAsync(string employeeNoa46) {
            this.GetOpenLeaveApplicationAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void GetOpenLeaveApplicationAsync(string employeeNoa46, object userState) {
            if ((this.GetOpenLeaveApplicationOperationCompleted == null)) {
                this.GetOpenLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("GetOpenLeaveApplication", new object[] {
                        employeeNoa46}, this.GetOpenLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnGetOpenLeaveApplicationOperationCompleted(object arg) {
            if ((this.GetOpenLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenLeaveApplicationCompleted(this, new GetOpenLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:GetLeaveApplica" +
            "tionStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="GetLeaveApplicationStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetLeaveApplicationStatus(string leaveApplicationNoa46) {
            object[] results = this.Invoke("GetLeaveApplicationStatus", new object[] {
                        leaveApplicationNoa46});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveApplicationStatusAsync(string leaveApplicationNoa46) {
            this.GetLeaveApplicationStatusAsync(leaveApplicationNoa46, null);
        }
        
        /// <remarks/>
        public void GetLeaveApplicationStatusAsync(string leaveApplicationNoa46, object userState) {
            if ((this.GetLeaveApplicationStatusOperationCompleted == null)) {
                this.GetLeaveApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("GetLeaveApplicationStatus", new object[] {
                        leaveApplicationNoa46}, this.GetLeaveApplicationStatusOperationCompleted, userState);
        }
        
        private void OnGetLeaveApplicationStatusOperationCompleted(object arg) {
            if ((this.GetLeaveApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveApplicationStatusCompleted(this, new GetLeaveApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckLeaveAppli" +
            "cationApprovalWorkflowEnabled", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckLeaveApplicationApprovalWorkflowEnabled_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckLeaveApplicationApprovalWorkflowEnabled(string hRLeaveApplicationNoa46) {
            object[] results = this.Invoke("CheckLeaveApplicationApprovalWorkflowEnabled", new object[] {
                        hRLeaveApplicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLeaveApplicationApprovalWorkflowEnabledAsync(string hRLeaveApplicationNoa46) {
            this.CheckLeaveApplicationApprovalWorkflowEnabledAsync(hRLeaveApplicationNoa46, null);
        }
        
        /// <remarks/>
        public void CheckLeaveApplicationApprovalWorkflowEnabledAsync(string hRLeaveApplicationNoa46, object userState) {
            if ((this.CheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted == null)) {
                this.CheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted);
            }
            this.InvokeAsync("CheckLeaveApplicationApprovalWorkflowEnabled", new object[] {
                        hRLeaveApplicationNoa46}, this.CheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted, userState);
        }
        
        private void OnCheckLeaveApplicationApprovalWorkflowEnabledOperationCompleted(object arg) {
            if ((this.CheckLeaveApplicationApprovalWorkflowEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLeaveApplicationApprovalWorkflowEnabledCompleted(this, new CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:SendLeaveApplic" +
            "ationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="SendLeaveApplicationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool SendLeaveApplicationApprovalRequest(string hRLeaveApplicationNoa46) {
            object[] results = this.Invoke("SendLeaveApplicationApprovalRequest", new object[] {
                        hRLeaveApplicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendLeaveApplicationApprovalRequestAsync(string hRLeaveApplicationNoa46) {
            this.SendLeaveApplicationApprovalRequestAsync(hRLeaveApplicationNoa46, null);
        }
        
        /// <remarks/>
        public void SendLeaveApplicationApprovalRequestAsync(string hRLeaveApplicationNoa46, object userState) {
            if ((this.SendLeaveApplicationApprovalRequestOperationCompleted == null)) {
                this.SendLeaveApplicationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeaveApplicationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("SendLeaveApplicationApprovalRequest", new object[] {
                        hRLeaveApplicationNoa46}, this.SendLeaveApplicationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnSendLeaveApplicationApprovalRequestOperationCompleted(object arg) {
            if ((this.SendLeaveApplicationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeaveApplicationApprovalRequestCompleted(this, new SendLeaveApplicationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CancelLeaveAppl" +
            "icationApprovalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CancelLeaveApplicationApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CancelLeaveApplicationApprovalRequest(string leaveApplicationNoa46) {
            object[] results = this.Invoke("CancelLeaveApplicationApprovalRequest", new object[] {
                        leaveApplicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelLeaveApplicationApprovalRequestAsync(string leaveApplicationNoa46) {
            this.CancelLeaveApplicationApprovalRequestAsync(leaveApplicationNoa46, null);
        }
        
        /// <remarks/>
        public void CancelLeaveApplicationApprovalRequestAsync(string leaveApplicationNoa46, object userState) {
            if ((this.CancelLeaveApplicationApprovalRequestOperationCompleted == null)) {
                this.CancelLeaveApplicationApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelLeaveApplicationApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("CancelLeaveApplicationApprovalRequest", new object[] {
                        leaveApplicationNoa46}, this.CancelLeaveApplicationApprovalRequestOperationCompleted, userState);
        }
        
        private void OnCancelLeaveApplicationApprovalRequestOperationCompleted(object arg) {
            if ((this.CancelLeaveApplicationApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelLeaveApplicationApprovalRequestCompleted(this, new CancelLeaveApplicationApprovalRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:ReopenLeaveAppl" +
            "ication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="ReopenLeaveApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ReopenLeaveApplication(string leaveApplicationNoa46) {
            object[] results = this.Invoke("ReopenLeaveApplication", new object[] {
                        leaveApplicationNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReopenLeaveApplicationAsync(string leaveApplicationNoa46) {
            this.ReopenLeaveApplicationAsync(leaveApplicationNoa46, null);
        }
        
        /// <remarks/>
        public void ReopenLeaveApplicationAsync(string leaveApplicationNoa46, object userState) {
            if ((this.ReopenLeaveApplicationOperationCompleted == null)) {
                this.ReopenLeaveApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReopenLeaveApplicationOperationCompleted);
            }
            this.InvokeAsync("ReopenLeaveApplication", new object[] {
                        leaveApplicationNoa46}, this.ReopenLeaveApplicationOperationCompleted, userState);
        }
        
        private void OnReopenLeaveApplicationOperationCompleted(object arg) {
            if ((this.ReopenLeaveApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReopenLeaveApplicationCompleted(this, new ReopenLeaveApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:GetEmployeeLeav" +
            "eBalance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="GetEmployeeLeaveBalance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public decimal GetEmployeeLeaveBalance(string employeeNo, string leaveType) {
            object[] results = this.Invoke("GetEmployeeLeaveBalance", new object[] {
                        employeeNo,
                        leaveType});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeLeaveBalanceAsync(string employeeNo, string leaveType) {
            this.GetEmployeeLeaveBalanceAsync(employeeNo, leaveType, null);
        }
        
        /// <remarks/>
        public void GetEmployeeLeaveBalanceAsync(string employeeNo, string leaveType, object userState) {
            if ((this.GetEmployeeLeaveBalanceOperationCompleted == null)) {
                this.GetEmployeeLeaveBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeLeaveBalanceOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeLeaveBalance", new object[] {
                        employeeNo,
                        leaveType}, this.GetEmployeeLeaveBalanceOperationCompleted, userState);
        }
        
        private void OnGetEmployeeLeaveBalanceOperationCompleted(object arg) {
            if ((this.GetEmployeeLeaveBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeLeaveBalanceCompleted(this, new GetEmployeeLeaveBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CheckOpenLeaveR" +
            "eimbursementExists", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CheckOpenLeaveReimbursementExists_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool CheckOpenLeaveReimbursementExists(string employeeNoa46) {
            object[] results = this.Invoke("CheckOpenLeaveReimbursementExists", new object[] {
                        employeeNoa46});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpenLeaveReimbursementExistsAsync(string employeeNoa46) {
            this.CheckOpenLeaveReimbursementExistsAsync(employeeNoa46, null);
        }
        
        /// <remarks/>
        public void CheckOpenLeaveReimbursementExistsAsync(string employeeNoa46, object userState) {
            if ((this.CheckOpenLeaveReimbursementExistsOperationCompleted == null)) {
                this.CheckOpenLeaveReimbursementExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpenLeaveReimbursementExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOpenLeaveReimbursementExists", new object[] {
                        employeeNoa46}, this.CheckOpenLeaveReimbursementExistsOperationCompleted, userState);
        }
        
        private void OnCheckOpenLeaveReimbursementExistsOperationCompleted(object arg) {
            if ((this.CheckOpenLeaveReimbursementExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpenLeaveReimbursementExistsCompleted(this, new CheckOpenLeaveReimbursementExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:ModifyHRRequire" +
            "dDocumentLocalURL", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="ModifyHRRequiredDocumentLocalURL_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool ModifyHRRequiredDocumentLocalURL(string documentNoa46, string documentCode, string localURL) {
            object[] results = this.Invoke("ModifyHRRequiredDocumentLocalURL", new object[] {
                        documentNoa46,
                        documentCode,
                        localURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyHRRequiredDocumentLocalURLAsync(string documentNoa46, string documentCode, string localURL) {
            this.ModifyHRRequiredDocumentLocalURLAsync(documentNoa46, documentCode, localURL, null);
        }
        
        /// <remarks/>
        public void ModifyHRRequiredDocumentLocalURLAsync(string documentNoa46, string documentCode, string localURL, object userState) {
            if ((this.ModifyHRRequiredDocumentLocalURLOperationCompleted == null)) {
                this.ModifyHRRequiredDocumentLocalURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyHRRequiredDocumentLocalURLOperationCompleted);
            }
            this.InvokeAsync("ModifyHRRequiredDocumentLocalURL", new object[] {
                        documentNoa46,
                        documentCode,
                        localURL}, this.ModifyHRRequiredDocumentLocalURLOperationCompleted, userState);
        }
        
        private void OnModifyHRRequiredDocumentLocalURLOperationCompleted(object arg) {
            if ((this.ModifyHRRequiredDocumentLocalURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyHRRequiredDocumentLocalURLCompleted(this, new ModifyHRRequiredDocumentLocalURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS:CreatePortalDoc" +
            "umentLink", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", ResponseElementName="CreatePortalDocumentLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/HumanResourceManagementWS", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreatePortalDocumentLink(string documentNoa46) {
            this.Invoke("CreatePortalDocumentLink", new object[] {
                        documentNoa46});
        }
        
        /// <remarks/>
        public void CreatePortalDocumentLinkAsync(string documentNoa46) {
            this.CreatePortalDocumentLinkAsync(documentNoa46, null);
        }
        
        /// <remarks/>
        public void CreatePortalDocumentLinkAsync(string documentNoa46, object userState) {
            if ((this.CreatePortalDocumentLinkOperationCompleted == null)) {
                this.CreatePortalDocumentLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePortalDocumentLinkOperationCompleted);
            }
            this.InvokeAsync("CreatePortalDocumentLink", new object[] {
                        documentNoa46}, this.CreatePortalDocumentLinkOperationCompleted, userState);
        }
        
        private void OnCreatePortalDocumentLinkOperationCompleted(object arg) {
            if ((this.CreatePortalDocumentLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePortalDocumentLinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckOpenLeavePlannerExistsCompletedEventHandler(object sender, CheckOpenLeavePlannerExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenLeavePlannerExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenLeavePlannerExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckOpenLeaveApplicationExistsCompletedEventHandler(object sender, CheckOpenLeaveApplicationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenLeaveApplicationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenLeaveApplicationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckLeaveApplicationExistsCompletedEventHandler(object sender, CheckLeaveApplicationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLeaveApplicationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLeaveApplicationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateLeaveApplicationCompletedEventHandler(object sender, CreateLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyLeaveApplicationCompletedEventHandler(object sender, ModifyLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckRunningLeavesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLeaveEndDateCompletedEventHandler(object sender, GetLeaveEndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveEndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveEndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLeaveReturnDateCompletedEventHandler(object sender, GetLeaveReturnDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveReturnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveReturnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOpenLeaveApplicationCompletedEventHandler(object sender, GetOpenLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLeaveApplicationStatusCompletedEventHandler(object sender, GetLeaveApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventHandler(object sender, CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLeaveApplicationApprovalWorkflowEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendLeaveApplicationApprovalRequestCompletedEventHandler(object sender, SendLeaveApplicationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLeaveApplicationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLeaveApplicationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CancelLeaveApplicationApprovalRequestCompletedEventHandler(object sender, CancelLeaveApplicationApprovalRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelLeaveApplicationApprovalRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelLeaveApplicationApprovalRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReopenLeaveApplicationCompletedEventHandler(object sender, ReopenLeaveApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReopenLeaveApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReopenLeaveApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEmployeeLeaveBalanceCompletedEventHandler(object sender, GetEmployeeLeaveBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeLeaveBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeLeaveBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckOpenLeaveReimbursementExistsCompletedEventHandler(object sender, CheckOpenLeaveReimbursementExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpenLeaveReimbursementExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpenLeaveReimbursementExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyHRRequiredDocumentLocalURLCompletedEventHandler(object sender, ModifyHRRequiredDocumentLocalURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyHRRequiredDocumentLocalURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyHRRequiredDocumentLocalURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreatePortalDocumentLinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591